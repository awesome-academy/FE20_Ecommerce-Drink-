{"ast":null,"code":"import _classCallCheck from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nvar randomstring = require(\"randomstring\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleForm = function () {\n      _this.setState({\n        isDisplayForm: !_this.state.isDisplayForm\n      });\n    };\n\n    _this.onCloseForm = function () {\n      _this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    _this.onOpenForm = function () {\n      _this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      var tasks = _this.state.tasks;\n      data.id = randomstring.generate();\n      tasks.push(data);\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) result = index;\n      });\n      return result;\n    };\n\n    _this.onDelete = function (id) {\n      console.log(id);\n      var tasks = _this.state.tasks;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) {\n          var i = tasks.indexOf(task);\n          tasks.splice(i, 1);\n          alert(\"Bạn đã xóa \" + task.name + \" ra khỏi danh sách\");\n\n          _this.setState({\n            tasks: tasks\n          });\n        }\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n\n      _this.onCloseForm();\n    };\n\n    _this.onUpdate = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      var taskEditing = tasks[index];\n      console.log(taskEditing);\n\n      _this.setState({\n        taskEditing: taskEditing\n      });\n\n      _this.onOpenForm();\n    };\n\n    _this.state = {\n      tasks: [],\n      // id: unique, name, status\n      isDisplayForm: false,\n      taskEditing: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm,\n          taskEditing = _this$state.taskEditing;\n      var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        onSubmit: this.onSubmit,\n        onCloseForm: this.onCloseForm,\n        task: taskEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"To-Do List\", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \" ReactJS\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-4 col-sm-4 col-md-4 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, elmTaskForm), React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), \" Th\\xEAm c\\xF4ng vi\\u1EC7c\"), \"\\xA0\", React.createElement(Control, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(TaskList, {\n        tasks: tasks,\n        onUpdateStatus: this.onUpdateStatus,\n        onDelete: this.onDelete,\n        onUpdate: this.onUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:\\Cong_Viec\\Framgia\\react-demo\\src\\App.js"],"names":["React","Component","TaskForm","Control","TaskList","randomstring","require","App","props","onToggleForm","setState","isDisplayForm","state","onCloseForm","onOpenForm","onSubmit","data","tasks","id","generate","push","localStorage","setItem","JSON","stringify","onUpdateStatus","index","findIndex","status","result","forEach","task","onDelete","console","log","i","indexOf","splice","alert","name","onUpdate","taskEditing","getItem","parse","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nvar randomstring = require(\"randomstring\");\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            tasks: [],   // id: unique, name, status\n            isDisplayForm : false,\n            taskEditing: null\n        }\n    }\n\n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks'))\n            this.setState({\n                tasks : tasks\n            })\n        }\n    }\n\n    onToggleForm = () =>{\n        this.setState({\n            isDisplayForm : !this.state.isDisplayForm\n        })\n    }\n\n    onCloseForm = () =>{\n        this.setState({\n            isDisplayForm : false\n        })\n    }\n\n    onOpenForm = () =>{\n        this.setState({\n            isDisplayForm : true\n        })\n    }\n\n    onSubmit = (data) => {\n        var { tasks } = this.state\n        data.id = randomstring.generate()\n        tasks.push(data)\n        this.setState({\n            tasks : tasks\n        })\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n\n    onUpdateStatus = (id) => {\n        var { tasks } = this.state\n        var index = this.findIndex(id)\n        if(index !== -1){\n            tasks[index].status = !tasks[index].status\n            this.setState({\n                tasks : tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n\n    findIndex = (id) => {\n        var { tasks } = this.state\n        var result = -1\n        tasks.forEach((task, index) => {\n            if(task.id === id) result = index\n        })\n        return result\n    }\n\n    onDelete = (id) => {\n        console.log(id)\n        var { tasks } = this.state\n        tasks.forEach((task, index) => {\n            if(task.id === id){\n                var i = tasks.indexOf(task)\n                tasks.splice(i, 1)\n                alert(\"Bạn đã xóa \" + task.name + \" ra khỏi danh sách\")\n                this.setState({\n                    tasks : tasks\n                })\n            }\n        })\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n        this.onCloseForm()\n    }\n\n    onUpdate = (id) => {\n        var { tasks } = this.state\n        var index = this.findIndex(id)\n        var taskEditing = tasks[index]\n        console.log(taskEditing)\n        this.setState({\n            taskEditing : taskEditing\n        })\n        this.onOpenForm()\n    }\n\n    render() {\n        var {tasks, isDisplayForm, taskEditing} = this.state\n        var elmTaskForm = isDisplayForm ? <TaskForm \n                                                onSubmit={this.onSubmit} \n                                                onCloseForm={this.onCloseForm}\n                                                task={taskEditing}\n\n                                            /> : ''\n        return ( \n            <div className=\"container\">                \n                <div className=\"page-header\">\n                  <h1>To-Do List<small> ReactJS</small></h1>\n                </div>                \n                <div className=\"row\">\n                    {/* Form */}                    \n                    <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n                        {elmTaskForm}\n                    </div>\n                    {/* End: Form */}\n                    \n                    <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                        {/* Add To Do */}\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-primary\"\n                            onClick={this.onToggleForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span> Thêm công việc\n                        </button>&nbsp;\n                        {/* Search -Sort */}\n                        <Control />   \n                        {/* List */}\n                        <div className=\"row mt-5\">                            \n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">                       \n                                <TaskList \n                                    tasks={tasks} \n                                    onUpdateStatus={this.onUpdateStatus}\n                                    onDelete={this.onDelete}\n                                    onUpdate={this.onUpdate}\n                                />\n                            </div>                            \n                        </div>\n                    </div>                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}