{"ast":null,"code":"import _classCallCheck from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Cong_Viec\\\\Framgia\\\\react-demo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nvar randomstring = require(\"randomstring\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var tasks = [{\n        id: randomstring.generate(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: randomstring.generate(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: randomstring.generate(),\n        name: 'Ngu',\n        status: true\n      }];\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.state = {\n      tasks: [],\n      // id: unique, name, status\n      isDisplayForm: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm; // var tasks = this.state.tasks\n\n      var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"To-Do List\", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" ReactJS\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-4 col-sm-4 col-md-4 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, elmTaskForm), React.createElement(\"div\", {\n        className: \"col-xs-8 col-sm-8 col-md-8 col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" Th\\xEAm c\\xF4ng vi\\u1EC7c\"), \"\\xA0\", React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Generate Data\"), \"\\xA0\", React.createElement(Control, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TaskList, {\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:\\Cong_Viec\\Framgia\\react-demo\\src\\App.js"],"names":["React","Component","TaskForm","Control","TaskList","randomstring","require","App","props","onGenerateData","tasks","id","generate","name","status","setState","localStorage","setItem","JSON","stringify","state","isDisplayForm","getItem","parse","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nvar randomstring = require(\"randomstring\");\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            tasks: [],   // id: unique, name, status\n            isDisplayForm : false\n        }\n    }\n\n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks'))\n            this.setState({\n                tasks : tasks\n            })\n        }\n    }\n\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id: randomstring.generate(),\n                name: 'Hoc lap trinh',\n                status: true\n            },\n            {\n                id: randomstring.generate(),\n                name: 'Di boi',\n                status: false\n            },\n            {\n                id: randomstring.generate(),\n                name: 'Ngu',\n                status: true\n            }\n        ]\n        this.setState({\n            tasks : tasks\n        })\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n\n    render() {\n        var {tasks, isDisplayForm} = this.state    // var tasks = this.state.tasks\n        var elmTaskForm = isDisplayForm ? <TaskForm /> : ''\n        return ( \n            <div className=\"container\">                \n                <div className=\"page-header\">\n                  <h1>To-Do List<small> ReactJS</small></h1>\n                </div>                \n                <div className=\"row\">\n                    {/* Form */}                    \n                    <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n                        {elmTaskForm}\n                    </div>\n                    {/* End: Form */}\n                    \n                    <div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8\">\n                        {/* Add To Do */}\n                        <button type=\"button\" className=\"btn btn-primary\">\n                            <span className=\"fa fa-plus mr-5\"></span> Thêm công việc\n                        </button>&nbsp;\n                        <button type=\"button\" className=\"btn btn-danger ml-5\" onClick={this.onGenerateData}>\n                            Generate Data\n                        </button>&nbsp;\n                        {/* Search -Sort */}\n                        <Control />   \n                        {/* List */}\n                        <div className=\"row mt-5\">                            \n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">                       \n                                <TaskList tasks={tasks} />\n                            </div>                            \n                        </div>\n                    </div>                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}